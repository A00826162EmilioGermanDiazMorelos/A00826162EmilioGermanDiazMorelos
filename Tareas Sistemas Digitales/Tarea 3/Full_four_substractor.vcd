$date
  Tue Mar 24 17:31:55 2020
$end
$version
  GHDL v0
$end
$timescale
  1 fs
$end
$scope module standard $end
$upscope $end
$scope module full_four_substractor $end
$var reg 4 ! a[3:0] $end
$var reg 4 " b[3:0] $end
$var reg 1 # bin $end
$var reg 4 $ d[3:0] $end
$var reg 1 % bout $end
$var reg 4 & bo[3:0] $end
$scope module fs0 $end
$var reg 1 ' a $end
$var reg 1 ( b $end
$var reg 1 ) cin $end
$var reg 1 * diff $end
$var reg 1 + bout $end
$upscope $end
$scope module fs1 $end
$var reg 1 , a $end
$var reg 1 - b $end
$var reg 1 . cin $end
$var reg 1 / diff $end
$var reg 1 0 bout $end
$upscope $end
$scope module fs2 $end
$var reg 1 1 a $end
$var reg 1 2 b $end
$var reg 1 3 cin $end
$var reg 1 4 diff $end
$var reg 1 5 bout $end
$upscope $end
$scope module fs3 $end
$var reg 1 6 a $end
$var reg 1 7 b $end
$var reg 1 8 cin $end
$var reg 1 9 diff $end
$var reg 1 : bout $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
b0000 !
b0000 "
0#
b0000 $
0%
b0000 &
0'
0(
0)
0*
0+
0,
0-
0.
0/
00
01
02
03
04
05
06
07
08
09
0:
